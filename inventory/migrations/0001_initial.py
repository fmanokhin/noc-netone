# Generated by Django 2.0.7 on 2018-10-17 13:28

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Core',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('contacts', models.TextField(blank=True, max_length=100)),
                ('manager', models.CharField(blank=True, max_length=100)),
                ('bandwidth', models.CharField(blank=True, max_length=100)),
                ('vlans', models.CharField(blank=True, max_length=100)),
                ('comments', models.TextField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('contacts', models.TextField(blank=True, max_length=100)),
                ('manager', models.CharField(blank=True, max_length=100)),
                ('comments', models.TextField(blank=True, max_length=100)),
                ('switch', models.CharField(blank=True, max_length=100)),
                ('vlans', models.CharField(blank=True, max_length=100)),
                ('bandwidth', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
                ('dnsname', models.CharField(blank=True, max_length=100)),
                ('ipaddress', models.CharField(max_length=100)),
                ('geoaddress', models.CharField(max_length=100)),
                ('comments', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('network', models.CharField(max_length=18, validators=[django.core.validators.RegexValidator('^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$')])),
                ('status', models.CharField(choices=[('FREE', 'Свободно'), ('BUSY', 'Занято')], default='FREE', max_length=4)),
                ('segment', models.CharField(choices=[('TECH', 'TECH'), ('MPLS', 'MPLS'), ('CORE', 'CORE'), ('Customers', 'CUSTOMERS')], max_length=9)),
                ('comment', models.CharField(blank=True, max_length=100)),
                ('tocore', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='inventory.Core')),
                ('tocustomer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='inventory.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='Pop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('contacts', models.TextField(blank=True, max_length=100)),
                ('manager', models.CharField(blank=True, max_length=100)),
                ('bandwidth', models.CharField(blank=True, max_length=100)),
                ('vlans', models.CharField(blank=True, max_length=100)),
                ('comments', models.TextField(blank=True, max_length=100)),
                ('devices', models.ManyToManyField(blank=True, to='inventory.Device')),
                ('downstream', models.ManyToManyField(blank=True, to='inventory.Customer')),
                ('otherpopsdownstream', models.ManyToManyField(related_name='otherpops_downstream', to='inventory.Pop')),
                ('otherpopsupstream', models.ManyToManyField(related_name='otherpops_upstream', to='inventory.Pop')),
                ('upstream', models.ManyToManyField(blank=True, to='inventory.Core')),
            ],
        ),
        migrations.AddField(
            model_name='network',
            name='topop',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='inventory.Pop'),
        ),
        migrations.AddField(
            model_name='device',
            name='address',
            field=models.ManyToManyField(blank=True, to='inventory.Pop'),
        ),
        migrations.AddField(
            model_name='device',
            name='coreaddress',
            field=models.ManyToManyField(blank=True, to='inventory.Core'),
        ),
        migrations.AddField(
            model_name='customer',
            name='upstream',
            field=models.ManyToManyField(blank=True, to='inventory.Pop'),
        ),
        migrations.AddField(
            model_name='core',
            name='devices',
            field=models.ManyToManyField(blank=True, to='inventory.Device'),
        ),
        migrations.AddField(
            model_name='core',
            name='downstream',
            field=models.ManyToManyField(blank=True, to='inventory.Pop'),
        ),
    ]
